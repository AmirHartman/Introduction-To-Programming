//import java.math.BigInteger;

public class RunFromHere {

	public static void main(String[] args) {
		
//		Assignment3BigInteger ri =  new Assignment3BigInteger();
//		
//		Bit bit1 = new Bit(true);
//		Bit bit0 = new Bit(false); 
//		BitVector bi = new BitVector("1011");
////		System.out.println(bit0.toString() + " " + bit1.toString());
////		int sum = bit1.toInt() + bit0.toInt();
//		BigInteger f = new BigInteger("4");
//		System.out.println(ri.isPrime(f));
//		System.out.println(NumericalString.binary2Decimal
//		String sa = NumericalString.stringAdd("1", "999");
//		System.out.println(sa);
//		String s = "";
//		for (int i=0; i<100; i=i+1) {
//		     s = s+"1";
//		}
//		System.out.println(NumericalString.binary2Decimal(s)); // “552”
//		
//		String s
//		System.out.println(s.length());
	    BitVector number = new BitVector
		System.out.println(number.toString());
	}

}
